//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Bilety_Clients", "Clients", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Clients), "Bilety", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Bilety), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Bilety_Reysy", "Reysy", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Reysy), "Bilety", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Bilety), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Oplata_Bilety", "Bilety", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Bilety), "Oplata", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Oplata), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Sotrudniki_Dolzhnosti", "Dolzhnosti", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Dolzhnosti), "Sotrudniki", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Sotrudniki), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Marshruty_Sotrudniki", "Sotrudniki", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Sotrudniki), "Marshruty", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Marshruty), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_OstanovkiMarshrutov_Marshruty", "Marshruty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Marshruty), "OstanovkiMarshrutov", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.OstanovkiMarshrutov), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Raspisanie_Marshruty", "Marshruty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Marshruty), "Raspisanie", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Raspisanie), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Reysy_Marshruty", "Marshruty", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Marshruty), "Reysy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Reysy), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_OstanovkiMarshrutov_Ostanovki", "Ostanovki", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Ostanovki), "OstanovkiMarshrutov", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.OstanovkiMarshrutov), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Reysy_Transport", "Transport", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Transport), "Reysy", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Reysy), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Sotrudniki_User", "Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Users), "Sotrudniki", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Sotrudniki), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Transport_Sotrudniki", "Sotrudniki", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Sotrudniki), "Transport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Transport), true)]
[assembly: EdmRelationshipAttribute("avtobazaModel", "FK_Transport_Voditeli", "Voditeli", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(avtobaza.Model.Voditeli), "Transport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(avtobaza.Model.Transport), true)]

#endregion

namespace avtobaza.Model
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class avtobazaEntities2 : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект avtobazaEntities2, используя строку соединения из раздела "avtobazaEntities2" файла конфигурации приложения.
        /// </summary>
        public avtobazaEntities2() : base("name=avtobazaEntities2", "avtobazaEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта avtobazaEntities2.
        /// </summary>
        public avtobazaEntities2(string connectionString) : base(connectionString, "avtobazaEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта avtobazaEntities2.
        /// </summary>
        public avtobazaEntities2(EntityConnection connection) : base(connection, "avtobazaEntities2")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Bilety> Bilety
        {
            get
            {
                if ((_Bilety == null))
                {
                    _Bilety = base.CreateObjectSet<Bilety>("Bilety");
                }
                return _Bilety;
            }
        }
        private ObjectSet<Bilety> _Bilety;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Clients> Clients
        {
            get
            {
                if ((_Clients == null))
                {
                    _Clients = base.CreateObjectSet<Clients>("Clients");
                }
                return _Clients;
            }
        }
        private ObjectSet<Clients> _Clients;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Dolzhnosti> Dolzhnosti
        {
            get
            {
                if ((_Dolzhnosti == null))
                {
                    _Dolzhnosti = base.CreateObjectSet<Dolzhnosti>("Dolzhnosti");
                }
                return _Dolzhnosti;
            }
        }
        private ObjectSet<Dolzhnosti> _Dolzhnosti;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Marshruty> Marshruty
        {
            get
            {
                if ((_Marshruty == null))
                {
                    _Marshruty = base.CreateObjectSet<Marshruty>("Marshruty");
                }
                return _Marshruty;
            }
        }
        private ObjectSet<Marshruty> _Marshruty;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Oplata> Oplata
        {
            get
            {
                if ((_Oplata == null))
                {
                    _Oplata = base.CreateObjectSet<Oplata>("Oplata");
                }
                return _Oplata;
            }
        }
        private ObjectSet<Oplata> _Oplata;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Ostanovki> Ostanovki
        {
            get
            {
                if ((_Ostanovki == null))
                {
                    _Ostanovki = base.CreateObjectSet<Ostanovki>("Ostanovki");
                }
                return _Ostanovki;
            }
        }
        private ObjectSet<Ostanovki> _Ostanovki;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<OstanovkiMarshrutov> OstanovkiMarshrutov
        {
            get
            {
                if ((_OstanovkiMarshrutov == null))
                {
                    _OstanovkiMarshrutov = base.CreateObjectSet<OstanovkiMarshrutov>("OstanovkiMarshrutov");
                }
                return _OstanovkiMarshrutov;
            }
        }
        private ObjectSet<OstanovkiMarshrutov> _OstanovkiMarshrutov;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Raspisanie> Raspisanie
        {
            get
            {
                if ((_Raspisanie == null))
                {
                    _Raspisanie = base.CreateObjectSet<Raspisanie>("Raspisanie");
                }
                return _Raspisanie;
            }
        }
        private ObjectSet<Raspisanie> _Raspisanie;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Reysy> Reysy
        {
            get
            {
                if ((_Reysy == null))
                {
                    _Reysy = base.CreateObjectSet<Reysy>("Reysy");
                }
                return _Reysy;
            }
        }
        private ObjectSet<Reysy> _Reysy;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Sotrudniki> Sotrudniki
        {
            get
            {
                if ((_Sotrudniki == null))
                {
                    _Sotrudniki = base.CreateObjectSet<Sotrudniki>("Sotrudniki");
                }
                return _Sotrudniki;
            }
        }
        private ObjectSet<Sotrudniki> _Sotrudniki;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Transport> Transport
        {
            get
            {
                if ((_Transport == null))
                {
                    _Transport = base.CreateObjectSet<Transport>("Transport");
                }
                return _Transport;
            }
        }
        private ObjectSet<Transport> _Transport;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Users> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<Users>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<Users> _Users;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Voditeli> Voditeli
        {
            get
            {
                if ((_Voditeli == null))
                {
                    _Voditeli = base.CreateObjectSet<Voditeli>("Voditeli");
                }
                return _Voditeli;
            }
        }
        private ObjectSet<Voditeli> _Voditeli;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Bilety. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBilety(Bilety bilety)
        {
            base.AddObject("Bilety", bilety);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Clients. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToClients(Clients clients)
        {
            base.AddObject("Clients", clients);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Dolzhnosti. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToDolzhnosti(Dolzhnosti dolzhnosti)
        {
            base.AddObject("Dolzhnosti", dolzhnosti);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Marshruty. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToMarshruty(Marshruty marshruty)
        {
            base.AddObject("Marshruty", marshruty);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Oplata. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOplata(Oplata oplata)
        {
            base.AddObject("Oplata", oplata);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Ostanovki. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOstanovki(Ostanovki ostanovki)
        {
            base.AddObject("Ostanovki", ostanovki);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet OstanovkiMarshrutov. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToOstanovkiMarshrutov(OstanovkiMarshrutov ostanovkiMarshrutov)
        {
            base.AddObject("OstanovkiMarshrutov", ostanovkiMarshrutov);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Raspisanie. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToRaspisanie(Raspisanie raspisanie)
        {
            base.AddObject("Raspisanie", raspisanie);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Reysy. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToReysy(Reysy reysy)
        {
            base.AddObject("Reysy", reysy);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Sotrudniki. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSotrudniki(Sotrudniki sotrudniki)
        {
            base.AddObject("Sotrudniki", sotrudniki);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet sysdiagrams. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Transport. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTransport(Transport transport)
        {
            base.AddObject("Transport", transport);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Users. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToUsers(Users users)
        {
            base.AddObject("Users", users);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Voditeli. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToVoditeli(Voditeli voditeli)
        {
            base.AddObject("Voditeli", voditeli);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Bilety")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bilety : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Bilety.
        /// </summary>
        /// <param name="iDBileta">Исходное значение свойства IDBileta.</param>
        /// <param name="iDReysa">Исходное значение свойства IDReysa.</param>
        /// <param name="iDClienta">Исходное значение свойства IDClienta.</param>
        /// <param name="nomerMesta">Исходное значение свойства NomerMesta.</param>
        /// <param name="dataIVremyaOtpravleniya">Исходное значение свойства DataIVremyaOtpravleniya.</param>
        /// <param name="dataIVremyaPribytiya">Исходное значение свойства DataIVremyaPribytiya.</param>
        /// <param name="stoimost">Исходное значение свойства Stoimost.</param>
        public static Bilety CreateBilety(global::System.Int32 iDBileta, global::System.Int32 iDReysa, global::System.Int32 iDClienta, global::System.String nomerMesta, global::System.DateTime dataIVremyaOtpravleniya, global::System.DateTime dataIVremyaPribytiya, global::System.Decimal stoimost)
        {
            Bilety bilety = new Bilety();
            bilety.IDBileta = iDBileta;
            bilety.IDReysa = iDReysa;
            bilety.IDClienta = iDClienta;
            bilety.NomerMesta = nomerMesta;
            bilety.DataIVremyaOtpravleniya = dataIVremyaOtpravleniya;
            bilety.DataIVremyaPribytiya = dataIVremyaPribytiya;
            bilety.Stoimost = stoimost;
            return bilety;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDBileta
        {
            get
            {
                return _IDBileta;
            }
            set
            {
                if (_IDBileta != value)
                {
                    OnIDBiletaChanging(value);
                    ReportPropertyChanging("IDBileta");
                    _IDBileta = StructuralObject.SetValidValue(value, "IDBileta");
                    ReportPropertyChanged("IDBileta");
                    OnIDBiletaChanged();
                }
            }
        }
        private global::System.Int32 _IDBileta;
        partial void OnIDBiletaChanging(global::System.Int32 value);
        partial void OnIDBiletaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDReysa
        {
            get
            {
                return _IDReysa;
            }
            set
            {
                OnIDReysaChanging(value);
                ReportPropertyChanging("IDReysa");
                _IDReysa = StructuralObject.SetValidValue(value, "IDReysa");
                ReportPropertyChanged("IDReysa");
                OnIDReysaChanged();
            }
        }
        private global::System.Int32 _IDReysa;
        partial void OnIDReysaChanging(global::System.Int32 value);
        partial void OnIDReysaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDClienta
        {
            get
            {
                return _IDClienta;
            }
            set
            {
                OnIDClientaChanging(value);
                ReportPropertyChanging("IDClienta");
                _IDClienta = StructuralObject.SetValidValue(value, "IDClienta");
                ReportPropertyChanged("IDClienta");
                OnIDClientaChanged();
            }
        }
        private global::System.Int32 _IDClienta;
        partial void OnIDClientaChanging(global::System.Int32 value);
        partial void OnIDClientaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NomerMesta
        {
            get
            {
                return _NomerMesta;
            }
            set
            {
                OnNomerMestaChanging(value);
                ReportPropertyChanging("NomerMesta");
                _NomerMesta = StructuralObject.SetValidValue(value, false, "NomerMesta");
                ReportPropertyChanged("NomerMesta");
                OnNomerMestaChanged();
            }
        }
        private global::System.String _NomerMesta;
        partial void OnNomerMestaChanging(global::System.String value);
        partial void OnNomerMestaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataIVremyaOtpravleniya
        {
            get
            {
                return _DataIVremyaOtpravleniya;
            }
            set
            {
                OnDataIVremyaOtpravleniyaChanging(value);
                ReportPropertyChanging("DataIVremyaOtpravleniya");
                _DataIVremyaOtpravleniya = StructuralObject.SetValidValue(value, "DataIVremyaOtpravleniya");
                ReportPropertyChanged("DataIVremyaOtpravleniya");
                OnDataIVremyaOtpravleniyaChanged();
            }
        }
        private global::System.DateTime _DataIVremyaOtpravleniya;
        partial void OnDataIVremyaOtpravleniyaChanging(global::System.DateTime value);
        partial void OnDataIVremyaOtpravleniyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataIVremyaPribytiya
        {
            get
            {
                return _DataIVremyaPribytiya;
            }
            set
            {
                OnDataIVremyaPribytiyaChanging(value);
                ReportPropertyChanging("DataIVremyaPribytiya");
                _DataIVremyaPribytiya = StructuralObject.SetValidValue(value, "DataIVremyaPribytiya");
                ReportPropertyChanged("DataIVremyaPribytiya");
                OnDataIVremyaPribytiyaChanged();
            }
        }
        private global::System.DateTime _DataIVremyaPribytiya;
        partial void OnDataIVremyaPribytiyaChanging(global::System.DateTime value);
        partial void OnDataIVremyaPribytiyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Stoimost
        {
            get
            {
                return _Stoimost;
            }
            set
            {
                OnStoimostChanging(value);
                ReportPropertyChanging("Stoimost");
                _Stoimost = StructuralObject.SetValidValue(value, "Stoimost");
                ReportPropertyChanged("Stoimost");
                OnStoimostChanged();
            }
        }
        private global::System.Decimal _Stoimost;
        partial void OnStoimostChanging(global::System.Decimal value);
        partial void OnStoimostChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Bilety_Clients", "Clients")]
        public Clients Clients
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clients>("avtobazaModel.FK_Bilety_Clients", "Clients").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clients>("avtobazaModel.FK_Bilety_Clients", "Clients").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Clients> ClientsReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Clients>("avtobazaModel.FK_Bilety_Clients", "Clients");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Clients>("avtobazaModel.FK_Bilety_Clients", "Clients", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Bilety_Reysy", "Reysy")]
        public Reysy Reysy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reysy>("avtobazaModel.FK_Bilety_Reysy", "Reysy").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reysy>("avtobazaModel.FK_Bilety_Reysy", "Reysy").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Reysy> ReysyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Reysy>("avtobazaModel.FK_Bilety_Reysy", "Reysy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Reysy>("avtobazaModel.FK_Bilety_Reysy", "Reysy", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Oplata_Bilety", "Oplata")]
        public EntityCollection<Oplata> Oplata
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Oplata>("avtobazaModel.FK_Oplata_Bilety", "Oplata");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Oplata>("avtobazaModel.FK_Oplata_Bilety", "Oplata", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Clients")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Clients : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Clients.
        /// </summary>
        /// <param name="iDClienta">Исходное значение свойства IDClienta.</param>
        /// <param name="imya">Исходное значение свойства Imya.</param>
        /// <param name="familiya">Исходное значение свойства Familiya.</param>
        /// <param name="passport">Исходное значение свойства Passport.</param>
        /// <param name="nomerTel">Исходное значение свойства NomerTel.</param>
        public static Clients CreateClients(global::System.Int32 iDClienta, global::System.String imya, global::System.String familiya, global::System.Decimal passport, global::System.Decimal nomerTel)
        {
            Clients clients = new Clients();
            clients.IDClienta = iDClienta;
            clients.Imya = imya;
            clients.Familiya = familiya;
            clients.Passport = passport;
            clients.NomerTel = nomerTel;
            return clients;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDClienta
        {
            get
            {
                return _IDClienta;
            }
            set
            {
                if (_IDClienta != value)
                {
                    OnIDClientaChanging(value);
                    ReportPropertyChanging("IDClienta");
                    _IDClienta = StructuralObject.SetValidValue(value, "IDClienta");
                    ReportPropertyChanged("IDClienta");
                    OnIDClientaChanged();
                }
            }
        }
        private global::System.Int32 _IDClienta;
        partial void OnIDClientaChanging(global::System.Int32 value);
        partial void OnIDClientaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Imya
        {
            get
            {
                return _Imya;
            }
            set
            {
                OnImyaChanging(value);
                ReportPropertyChanging("Imya");
                _Imya = StructuralObject.SetValidValue(value, false, "Imya");
                ReportPropertyChanged("Imya");
                OnImyaChanged();
            }
        }
        private global::System.String _Imya;
        partial void OnImyaChanging(global::System.String value);
        partial void OnImyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Familiya
        {
            get
            {
                return _Familiya;
            }
            set
            {
                OnFamiliyaChanging(value);
                ReportPropertyChanging("Familiya");
                _Familiya = StructuralObject.SetValidValue(value, false, "Familiya");
                ReportPropertyChanged("Familiya");
                OnFamiliyaChanged();
            }
        }
        private global::System.String _Familiya;
        partial void OnFamiliyaChanging(global::System.String value);
        partial void OnFamiliyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Otchestvo
        {
            get
            {
                return _Otchestvo;
            }
            set
            {
                OnOtchestvoChanging(value);
                ReportPropertyChanging("Otchestvo");
                _Otchestvo = StructuralObject.SetValidValue(value, true, "Otchestvo");
                ReportPropertyChanged("Otchestvo");
                OnOtchestvoChanged();
            }
        }
        private global::System.String _Otchestvo;
        partial void OnOtchestvoChanging(global::System.String value);
        partial void OnOtchestvoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Passport
        {
            get
            {
                return _Passport;
            }
            set
            {
                OnPassportChanging(value);
                ReportPropertyChanging("Passport");
                _Passport = StructuralObject.SetValidValue(value, "Passport");
                ReportPropertyChanged("Passport");
                OnPassportChanged();
            }
        }
        private global::System.Decimal _Passport;
        partial void OnPassportChanging(global::System.Decimal value);
        partial void OnPassportChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NomerTel
        {
            get
            {
                return _NomerTel;
            }
            set
            {
                OnNomerTelChanging(value);
                ReportPropertyChanging("NomerTel");
                _NomerTel = StructuralObject.SetValidValue(value, "NomerTel");
                ReportPropertyChanged("NomerTel");
                OnNomerTelChanged();
            }
        }
        private global::System.Decimal _NomerTel;
        partial void OnNomerTelChanging(global::System.Decimal value);
        partial void OnNomerTelChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Bilety_Clients", "Bilety")]
        public EntityCollection<Bilety> Bilety
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bilety>("avtobazaModel.FK_Bilety_Clients", "Bilety");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bilety>("avtobazaModel.FK_Bilety_Clients", "Bilety", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Dolzhnosti")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Dolzhnosti : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Dolzhnosti.
        /// </summary>
        /// <param name="iDDolzhnosti">Исходное значение свойства IDDolzhnosti.</param>
        public static Dolzhnosti CreateDolzhnosti(global::System.Int32 iDDolzhnosti)
        {
            Dolzhnosti dolzhnosti = new Dolzhnosti();
            dolzhnosti.IDDolzhnosti = iDDolzhnosti;
            return dolzhnosti;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDDolzhnosti
        {
            get
            {
                return _IDDolzhnosti;
            }
            set
            {
                if (_IDDolzhnosti != value)
                {
                    OnIDDolzhnostiChanging(value);
                    ReportPropertyChanging("IDDolzhnosti");
                    _IDDolzhnosti = StructuralObject.SetValidValue(value, "IDDolzhnosti");
                    ReportPropertyChanged("IDDolzhnosti");
                    OnIDDolzhnostiChanged();
                }
            }
        }
        private global::System.Int32 _IDDolzhnosti;
        partial void OnIDDolzhnostiChanging(global::System.Int32 value);
        partial void OnIDDolzhnostiChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Nazvaniye
        {
            get
            {
                return _Nazvaniye;
            }
            set
            {
                OnNazvaniyeChanging(value);
                ReportPropertyChanging("Nazvaniye");
                _Nazvaniye = StructuralObject.SetValidValue(value, true, "Nazvaniye");
                ReportPropertyChanged("Nazvaniye");
                OnNazvaniyeChanged();
            }
        }
        private global::System.String _Nazvaniye;
        partial void OnNazvaniyeChanging(global::System.String value);
        partial void OnNazvaniyeChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Sotrudniki_Dolzhnosti", "Sotrudniki")]
        public EntityCollection<Sotrudniki> Sotrudniki
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sotrudniki>("avtobazaModel.FK_Sotrudniki_Dolzhnosti", "Sotrudniki");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sotrudniki>("avtobazaModel.FK_Sotrudniki_Dolzhnosti", "Sotrudniki", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Marshruty")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Marshruty : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Marshruty.
        /// </summary>
        /// <param name="iDMarshruta">Исходное значение свойства IDMarshruta.</param>
        /// <param name="iDSotrudnika">Исходное значение свойства IDSotrudnika.</param>
        /// <param name="nazvanie">Исходное значение свойства Nazvanie.</param>
        /// <param name="punktOtpravleniya">Исходное значение свойства PunktOtpravleniya.</param>
        /// <param name="punktPribytiya">Исходное значение свойства PunktPribytiya.</param>
        public static Marshruty CreateMarshruty(global::System.Int32 iDMarshruta, global::System.Int32 iDSotrudnika, global::System.String nazvanie, global::System.String punktOtpravleniya, global::System.String punktPribytiya)
        {
            Marshruty marshruty = new Marshruty();
            marshruty.IDMarshruta = iDMarshruta;
            marshruty.IDSotrudnika = iDSotrudnika;
            marshruty.Nazvanie = nazvanie;
            marshruty.PunktOtpravleniya = punktOtpravleniya;
            marshruty.PunktPribytiya = punktPribytiya;
            return marshruty;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMarshruta
        {
            get
            {
                return _IDMarshruta;
            }
            set
            {
                if (_IDMarshruta != value)
                {
                    OnIDMarshrutaChanging(value);
                    ReportPropertyChanging("IDMarshruta");
                    _IDMarshruta = StructuralObject.SetValidValue(value, "IDMarshruta");
                    ReportPropertyChanged("IDMarshruta");
                    OnIDMarshrutaChanged();
                }
            }
        }
        private global::System.Int32 _IDMarshruta;
        partial void OnIDMarshrutaChanging(global::System.Int32 value);
        partial void OnIDMarshrutaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSotrudnika
        {
            get
            {
                return _IDSotrudnika;
            }
            set
            {
                OnIDSotrudnikaChanging(value);
                ReportPropertyChanging("IDSotrudnika");
                _IDSotrudnika = StructuralObject.SetValidValue(value, "IDSotrudnika");
                ReportPropertyChanged("IDSotrudnika");
                OnIDSotrudnikaChanged();
            }
        }
        private global::System.Int32 _IDSotrudnika;
        partial void OnIDSotrudnikaChanging(global::System.Int32 value);
        partial void OnIDSotrudnikaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazvanie
        {
            get
            {
                return _Nazvanie;
            }
            set
            {
                OnNazvanieChanging(value);
                ReportPropertyChanging("Nazvanie");
                _Nazvanie = StructuralObject.SetValidValue(value, false, "Nazvanie");
                ReportPropertyChanged("Nazvanie");
                OnNazvanieChanged();
            }
        }
        private global::System.String _Nazvanie;
        partial void OnNazvanieChanging(global::System.String value);
        partial void OnNazvanieChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PunktOtpravleniya
        {
            get
            {
                return _PunktOtpravleniya;
            }
            set
            {
                OnPunktOtpravleniyaChanging(value);
                ReportPropertyChanging("PunktOtpravleniya");
                _PunktOtpravleniya = StructuralObject.SetValidValue(value, false, "PunktOtpravleniya");
                ReportPropertyChanged("PunktOtpravleniya");
                OnPunktOtpravleniyaChanged();
            }
        }
        private global::System.String _PunktOtpravleniya;
        partial void OnPunktOtpravleniyaChanging(global::System.String value);
        partial void OnPunktOtpravleniyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PunktPribytiya
        {
            get
            {
                return _PunktPribytiya;
            }
            set
            {
                OnPunktPribytiyaChanging(value);
                ReportPropertyChanging("PunktPribytiya");
                _PunktPribytiya = StructuralObject.SetValidValue(value, false, "PunktPribytiya");
                ReportPropertyChanged("PunktPribytiya");
                OnPunktPribytiyaChanged();
            }
        }
        private global::System.String _PunktPribytiya;
        partial void OnPunktPribytiyaChanging(global::System.String value);
        partial void OnPunktPribytiyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> Protyazhennost
        {
            get
            {
                return _Protyazhennost;
            }
            set
            {
                OnProtyazhennostChanging(value);
                ReportPropertyChanging("Protyazhennost");
                _Protyazhennost = StructuralObject.SetValidValue(value, "Protyazhennost");
                ReportPropertyChanged("Protyazhennost");
                OnProtyazhennostChanged();
            }
        }
        private Nullable<global::System.Double> _Protyazhennost;
        partial void OnProtyazhennostChanging(Nullable<global::System.Double> value);
        partial void OnProtyazhennostChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> VremyaVPuti
        {
            get
            {
                return _VremyaVPuti;
            }
            set
            {
                OnVremyaVPutiChanging(value);
                ReportPropertyChanging("VremyaVPuti");
                _VremyaVPuti = StructuralObject.SetValidValue(value, "VremyaVPuti");
                ReportPropertyChanged("VremyaVPuti");
                OnVremyaVPutiChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _VremyaVPuti;
        partial void OnVremyaVPutiChanging(Nullable<global::System.TimeSpan> value);
        partial void OnVremyaVPutiChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Marshruty_Sotrudniki", "Sotrudniki")]
        public Sotrudniki Sotrudniki
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sotrudniki>("avtobazaModel.FK_Marshruty_Sotrudniki", "Sotrudniki").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sotrudniki>("avtobazaModel.FK_Marshruty_Sotrudniki", "Sotrudniki").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sotrudniki> SotrudnikiReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sotrudniki>("avtobazaModel.FK_Marshruty_Sotrudniki", "Sotrudniki");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sotrudniki>("avtobazaModel.FK_Marshruty_Sotrudniki", "Sotrudniki", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_OstanovkiMarshrutov_Marshruty", "OstanovkiMarshrutov")]
        public EntityCollection<OstanovkiMarshrutov> OstanovkiMarshrutov
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OstanovkiMarshrutov>("avtobazaModel.FK_OstanovkiMarshrutov_Marshruty", "OstanovkiMarshrutov");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OstanovkiMarshrutov>("avtobazaModel.FK_OstanovkiMarshrutov_Marshruty", "OstanovkiMarshrutov", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Raspisanie_Marshruty", "Raspisanie")]
        public EntityCollection<Raspisanie> Raspisanie
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Raspisanie>("avtobazaModel.FK_Raspisanie_Marshruty", "Raspisanie");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Raspisanie>("avtobazaModel.FK_Raspisanie_Marshruty", "Raspisanie", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Reysy_Marshruty", "Reysy")]
        public EntityCollection<Reysy> Reysy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reysy>("avtobazaModel.FK_Reysy_Marshruty", "Reysy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reysy>("avtobazaModel.FK_Reysy_Marshruty", "Reysy", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Oplata")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Oplata : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Oplata.
        /// </summary>
        /// <param name="iDOplaty">Исходное значение свойства IDOplaty.</param>
        /// <param name="iDBileta">Исходное значение свойства IDBileta.</param>
        /// <param name="dataOplaty">Исходное значение свойства DataOplaty.</param>
        public static Oplata CreateOplata(global::System.Int32 iDOplaty, global::System.Int32 iDBileta, global::System.DateTime dataOplaty)
        {
            Oplata oplata = new Oplata();
            oplata.IDOplaty = iDOplaty;
            oplata.IDBileta = iDBileta;
            oplata.DataOplaty = dataOplaty;
            return oplata;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDOplaty
        {
            get
            {
                return _IDOplaty;
            }
            set
            {
                if (_IDOplaty != value)
                {
                    OnIDOplatyChanging(value);
                    ReportPropertyChanging("IDOplaty");
                    _IDOplaty = StructuralObject.SetValidValue(value, "IDOplaty");
                    ReportPropertyChanged("IDOplaty");
                    OnIDOplatyChanged();
                }
            }
        }
        private global::System.Int32 _IDOplaty;
        partial void OnIDOplatyChanging(global::System.Int32 value);
        partial void OnIDOplatyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDBileta
        {
            get
            {
                return _IDBileta;
            }
            set
            {
                OnIDBiletaChanging(value);
                ReportPropertyChanging("IDBileta");
                _IDBileta = StructuralObject.SetValidValue(value, "IDBileta");
                ReportPropertyChanged("IDBileta");
                OnIDBiletaChanged();
            }
        }
        private global::System.Int32 _IDBileta;
        partial void OnIDBiletaChanging(global::System.Int32 value);
        partial void OnIDBiletaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DataOplaty
        {
            get
            {
                return _DataOplaty;
            }
            set
            {
                OnDataOplatyChanging(value);
                ReportPropertyChanging("DataOplaty");
                _DataOplaty = StructuralObject.SetValidValue(value, "DataOplaty");
                ReportPropertyChanged("DataOplaty");
                OnDataOplatyChanged();
            }
        }
        private global::System.DateTime _DataOplaty;
        partial void OnDataOplatyChanging(global::System.DateTime value);
        partial void OnDataOplatyChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sposob
        {
            get
            {
                return _Sposob;
            }
            set
            {
                OnSposobChanging(value);
                ReportPropertyChanging("Sposob");
                _Sposob = StructuralObject.SetValidValue(value, true, "Sposob");
                ReportPropertyChanged("Sposob");
                OnSposobChanged();
            }
        }
        private global::System.String _Sposob;
        partial void OnSposobChanging(global::System.String value);
        partial void OnSposobChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Oplata_Bilety", "Bilety")]
        public Bilety Bilety
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bilety>("avtobazaModel.FK_Oplata_Bilety", "Bilety").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bilety>("avtobazaModel.FK_Oplata_Bilety", "Bilety").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bilety> BiletyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bilety>("avtobazaModel.FK_Oplata_Bilety", "Bilety");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bilety>("avtobazaModel.FK_Oplata_Bilety", "Bilety", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Ostanovki")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ostanovki : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Ostanovki.
        /// </summary>
        /// <param name="iDOstanovki">Исходное значение свойства IDOstanovki.</param>
        /// <param name="adress">Исходное значение свойства Adress.</param>
        /// <param name="nazvanie">Исходное значение свойства Nazvanie.</param>
        public static Ostanovki CreateOstanovki(global::System.Int32 iDOstanovki, global::System.String adress, global::System.String nazvanie)
        {
            Ostanovki ostanovki = new Ostanovki();
            ostanovki.IDOstanovki = iDOstanovki;
            ostanovki.Adress = adress;
            ostanovki.Nazvanie = nazvanie;
            return ostanovki;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDOstanovki
        {
            get
            {
                return _IDOstanovki;
            }
            set
            {
                if (_IDOstanovki != value)
                {
                    OnIDOstanovkiChanging(value);
                    ReportPropertyChanging("IDOstanovki");
                    _IDOstanovki = StructuralObject.SetValidValue(value, "IDOstanovki");
                    ReportPropertyChanged("IDOstanovki");
                    OnIDOstanovkiChanged();
                }
            }
        }
        private global::System.Int32 _IDOstanovki;
        partial void OnIDOstanovkiChanging(global::System.Int32 value);
        partial void OnIDOstanovkiChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Adress
        {
            get
            {
                return _Adress;
            }
            set
            {
                OnAdressChanging(value);
                ReportPropertyChanging("Adress");
                _Adress = StructuralObject.SetValidValue(value, false, "Adress");
                ReportPropertyChanged("Adress");
                OnAdressChanged();
            }
        }
        private global::System.String _Adress;
        partial void OnAdressChanging(global::System.String value);
        partial void OnAdressChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nazvanie
        {
            get
            {
                return _Nazvanie;
            }
            set
            {
                OnNazvanieChanging(value);
                ReportPropertyChanging("Nazvanie");
                _Nazvanie = StructuralObject.SetValidValue(value, false, "Nazvanie");
                ReportPropertyChanged("Nazvanie");
                OnNazvanieChanged();
            }
        }
        private global::System.String _Nazvanie;
        partial void OnNazvanieChanging(global::System.String value);
        partial void OnNazvanieChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_OstanovkiMarshrutov_Ostanovki", "OstanovkiMarshrutov")]
        public EntityCollection<OstanovkiMarshrutov> OstanovkiMarshrutov
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OstanovkiMarshrutov>("avtobazaModel.FK_OstanovkiMarshrutov_Ostanovki", "OstanovkiMarshrutov");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OstanovkiMarshrutov>("avtobazaModel.FK_OstanovkiMarshrutov_Ostanovki", "OstanovkiMarshrutov", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="OstanovkiMarshrutov")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OstanovkiMarshrutov : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта OstanovkiMarshrutov.
        /// </summary>
        /// <param name="iDMarshruta">Исходное значение свойства IDMarshruta.</param>
        /// <param name="iDOstanovki">Исходное значение свойства IDOstanovki.</param>
        public static OstanovkiMarshrutov CreateOstanovkiMarshrutov(global::System.Int32 iDMarshruta, global::System.Int32 iDOstanovki)
        {
            OstanovkiMarshrutov ostanovkiMarshrutov = new OstanovkiMarshrutov();
            ostanovkiMarshrutov.IDMarshruta = iDMarshruta;
            ostanovkiMarshrutov.IDOstanovki = iDOstanovki;
            return ostanovkiMarshrutov;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMarshruta
        {
            get
            {
                return _IDMarshruta;
            }
            set
            {
                if (_IDMarshruta != value)
                {
                    OnIDMarshrutaChanging(value);
                    ReportPropertyChanging("IDMarshruta");
                    _IDMarshruta = StructuralObject.SetValidValue(value, "IDMarshruta");
                    ReportPropertyChanged("IDMarshruta");
                    OnIDMarshrutaChanged();
                }
            }
        }
        private global::System.Int32 _IDMarshruta;
        partial void OnIDMarshrutaChanging(global::System.Int32 value);
        partial void OnIDMarshrutaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDOstanovki
        {
            get
            {
                return _IDOstanovki;
            }
            set
            {
                if (_IDOstanovki != value)
                {
                    OnIDOstanovkiChanging(value);
                    ReportPropertyChanging("IDOstanovki");
                    _IDOstanovki = StructuralObject.SetValidValue(value, "IDOstanovki");
                    ReportPropertyChanged("IDOstanovki");
                    OnIDOstanovkiChanged();
                }
            }
        }
        private global::System.Int32 _IDOstanovki;
        partial void OnIDOstanovkiChanging(global::System.Int32 value);
        partial void OnIDOstanovkiChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> NomerOstanovki
        {
            get
            {
                return _NomerOstanovki;
            }
            set
            {
                OnNomerOstanovkiChanging(value);
                ReportPropertyChanging("NomerOstanovki");
                _NomerOstanovki = StructuralObject.SetValidValue(value, "NomerOstanovki");
                ReportPropertyChanged("NomerOstanovki");
                OnNomerOstanovkiChanged();
            }
        }
        private Nullable<global::System.Int32> _NomerOstanovki;
        partial void OnNomerOstanovkiChanging(Nullable<global::System.Int32> value);
        partial void OnNomerOstanovkiChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_OstanovkiMarshrutov_Marshruty", "Marshruty")]
        public Marshruty Marshruty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marshruty>("avtobazaModel.FK_OstanovkiMarshrutov_Marshruty", "Marshruty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marshruty>("avtobazaModel.FK_OstanovkiMarshrutov_Marshruty", "Marshruty").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Marshruty> MarshrutyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marshruty>("avtobazaModel.FK_OstanovkiMarshrutov_Marshruty", "Marshruty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Marshruty>("avtobazaModel.FK_OstanovkiMarshrutov_Marshruty", "Marshruty", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_OstanovkiMarshrutov_Ostanovki", "Ostanovki")]
        public Ostanovki Ostanovki
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ostanovki>("avtobazaModel.FK_OstanovkiMarshrutov_Ostanovki", "Ostanovki").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ostanovki>("avtobazaModel.FK_OstanovkiMarshrutov_Ostanovki", "Ostanovki").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Ostanovki> OstanovkiReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Ostanovki>("avtobazaModel.FK_OstanovkiMarshrutov_Ostanovki", "Ostanovki");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Ostanovki>("avtobazaModel.FK_OstanovkiMarshrutov_Ostanovki", "Ostanovki", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Raspisanie")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Raspisanie : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Raspisanie.
        /// </summary>
        /// <param name="iDraspisaniya">Исходное значение свойства IDraspisaniya.</param>
        /// <param name="iDMarshtuta">Исходное значение свойства IDMarshtuta.</param>
        /// <param name="denNedeli">Исходное значение свойства DenNedeli.</param>
        /// <param name="vremyaOtpravleniya">Исходное значение свойства VremyaOtpravleniya.</param>
        /// <param name="vremyaPribytiya">Исходное значение свойства VremyaPribytiya.</param>
        public static Raspisanie CreateRaspisanie(global::System.Int32 iDraspisaniya, global::System.Int32 iDMarshtuta, global::System.String denNedeli, global::System.TimeSpan vremyaOtpravleniya, global::System.TimeSpan vremyaPribytiya)
        {
            Raspisanie raspisanie = new Raspisanie();
            raspisanie.IDraspisaniya = iDraspisaniya;
            raspisanie.IDMarshtuta = iDMarshtuta;
            raspisanie.DenNedeli = denNedeli;
            raspisanie.VremyaOtpravleniya = vremyaOtpravleniya;
            raspisanie.VremyaPribytiya = vremyaPribytiya;
            return raspisanie;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDraspisaniya
        {
            get
            {
                return _IDraspisaniya;
            }
            set
            {
                if (_IDraspisaniya != value)
                {
                    OnIDraspisaniyaChanging(value);
                    ReportPropertyChanging("IDraspisaniya");
                    _IDraspisaniya = StructuralObject.SetValidValue(value, "IDraspisaniya");
                    ReportPropertyChanged("IDraspisaniya");
                    OnIDraspisaniyaChanged();
                }
            }
        }
        private global::System.Int32 _IDraspisaniya;
        partial void OnIDraspisaniyaChanging(global::System.Int32 value);
        partial void OnIDraspisaniyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMarshtuta
        {
            get
            {
                return _IDMarshtuta;
            }
            set
            {
                OnIDMarshtutaChanging(value);
                ReportPropertyChanging("IDMarshtuta");
                _IDMarshtuta = StructuralObject.SetValidValue(value, "IDMarshtuta");
                ReportPropertyChanged("IDMarshtuta");
                OnIDMarshtutaChanged();
            }
        }
        private global::System.Int32 _IDMarshtuta;
        partial void OnIDMarshtutaChanging(global::System.Int32 value);
        partial void OnIDMarshtutaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DenNedeli
        {
            get
            {
                return _DenNedeli;
            }
            set
            {
                OnDenNedeliChanging(value);
                ReportPropertyChanging("DenNedeli");
                _DenNedeli = StructuralObject.SetValidValue(value, false, "DenNedeli");
                ReportPropertyChanged("DenNedeli");
                OnDenNedeliChanged();
            }
        }
        private global::System.String _DenNedeli;
        partial void OnDenNedeliChanging(global::System.String value);
        partial void OnDenNedeliChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan VremyaOtpravleniya
        {
            get
            {
                return _VremyaOtpravleniya;
            }
            set
            {
                OnVremyaOtpravleniyaChanging(value);
                ReportPropertyChanging("VremyaOtpravleniya");
                _VremyaOtpravleniya = StructuralObject.SetValidValue(value, "VremyaOtpravleniya");
                ReportPropertyChanged("VremyaOtpravleniya");
                OnVremyaOtpravleniyaChanged();
            }
        }
        private global::System.TimeSpan _VremyaOtpravleniya;
        partial void OnVremyaOtpravleniyaChanging(global::System.TimeSpan value);
        partial void OnVremyaOtpravleniyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.TimeSpan VremyaPribytiya
        {
            get
            {
                return _VremyaPribytiya;
            }
            set
            {
                OnVremyaPribytiyaChanging(value);
                ReportPropertyChanging("VremyaPribytiya");
                _VremyaPribytiya = StructuralObject.SetValidValue(value, "VremyaPribytiya");
                ReportPropertyChanged("VremyaPribytiya");
                OnVremyaPribytiyaChanged();
            }
        }
        private global::System.TimeSpan _VremyaPribytiya;
        partial void OnVremyaPribytiyaChanging(global::System.TimeSpan value);
        partial void OnVremyaPribytiyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.TimeSpan> IntervalyDvizheniya
        {
            get
            {
                return _IntervalyDvizheniya;
            }
            set
            {
                OnIntervalyDvizheniyaChanging(value);
                ReportPropertyChanging("IntervalyDvizheniya");
                _IntervalyDvizheniya = StructuralObject.SetValidValue(value, "IntervalyDvizheniya");
                ReportPropertyChanged("IntervalyDvizheniya");
                OnIntervalyDvizheniyaChanged();
            }
        }
        private Nullable<global::System.TimeSpan> _IntervalyDvizheniya;
        partial void OnIntervalyDvizheniyaChanging(Nullable<global::System.TimeSpan> value);
        partial void OnIntervalyDvizheniyaChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Raspisanie_Marshruty", "Marshruty")]
        public Marshruty Marshruty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marshruty>("avtobazaModel.FK_Raspisanie_Marshruty", "Marshruty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marshruty>("avtobazaModel.FK_Raspisanie_Marshruty", "Marshruty").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Marshruty> MarshrutyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marshruty>("avtobazaModel.FK_Raspisanie_Marshruty", "Marshruty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Marshruty>("avtobazaModel.FK_Raspisanie_Marshruty", "Marshruty", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Reysy")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reysy : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Reysy.
        /// </summary>
        /// <param name="iDReysa">Исходное значение свойства IDReysa.</param>
        /// <param name="iDTransporta">Исходное значение свойства IDTransporta.</param>
        /// <param name="nomerReysa">Исходное значение свойства NomerReysa.</param>
        /// <param name="iDMarshruta">Исходное значение свойства IDMarshruta.</param>
        public static Reysy CreateReysy(global::System.Int32 iDReysa, global::System.Int32 iDTransporta, global::System.String nomerReysa, global::System.Int32 iDMarshruta)
        {
            Reysy reysy = new Reysy();
            reysy.IDReysa = iDReysa;
            reysy.IDTransporta = iDTransporta;
            reysy.NomerReysa = nomerReysa;
            reysy.IDMarshruta = iDMarshruta;
            return reysy;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDReysa
        {
            get
            {
                return _IDReysa;
            }
            set
            {
                if (_IDReysa != value)
                {
                    OnIDReysaChanging(value);
                    ReportPropertyChanging("IDReysa");
                    _IDReysa = StructuralObject.SetValidValue(value, "IDReysa");
                    ReportPropertyChanged("IDReysa");
                    OnIDReysaChanged();
                }
            }
        }
        private global::System.Int32 _IDReysa;
        partial void OnIDReysaChanging(global::System.Int32 value);
        partial void OnIDReysaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDTransporta
        {
            get
            {
                return _IDTransporta;
            }
            set
            {
                OnIDTransportaChanging(value);
                ReportPropertyChanging("IDTransporta");
                _IDTransporta = StructuralObject.SetValidValue(value, "IDTransporta");
                ReportPropertyChanged("IDTransporta");
                OnIDTransportaChanged();
            }
        }
        private global::System.Int32 _IDTransporta;
        partial void OnIDTransportaChanging(global::System.Int32 value);
        partial void OnIDTransportaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NomerReysa
        {
            get
            {
                return _NomerReysa;
            }
            set
            {
                OnNomerReysaChanging(value);
                ReportPropertyChanging("NomerReysa");
                _NomerReysa = StructuralObject.SetValidValue(value, false, "NomerReysa");
                ReportPropertyChanged("NomerReysa");
                OnNomerReysaChanged();
            }
        }
        private global::System.String _NomerReysa;
        partial void OnNomerReysaChanging(global::System.String value);
        partial void OnNomerReysaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDMarshruta
        {
            get
            {
                return _IDMarshruta;
            }
            set
            {
                OnIDMarshrutaChanging(value);
                ReportPropertyChanging("IDMarshruta");
                _IDMarshruta = StructuralObject.SetValidValue(value, "IDMarshruta");
                ReportPropertyChanged("IDMarshruta");
                OnIDMarshrutaChanged();
            }
        }
        private global::System.Int32 _IDMarshruta;
        partial void OnIDMarshrutaChanging(global::System.Int32 value);
        partial void OnIDMarshrutaChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Bilety_Reysy", "Bilety")]
        public EntityCollection<Bilety> Bilety
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bilety>("avtobazaModel.FK_Bilety_Reysy", "Bilety");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bilety>("avtobazaModel.FK_Bilety_Reysy", "Bilety", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Reysy_Marshruty", "Marshruty")]
        public Marshruty Marshruty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marshruty>("avtobazaModel.FK_Reysy_Marshruty", "Marshruty").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marshruty>("avtobazaModel.FK_Reysy_Marshruty", "Marshruty").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Marshruty> MarshrutyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Marshruty>("avtobazaModel.FK_Reysy_Marshruty", "Marshruty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Marshruty>("avtobazaModel.FK_Reysy_Marshruty", "Marshruty", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Reysy_Transport", "Transport")]
        public Transport Transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transport>("avtobazaModel.FK_Reysy_Transport", "Transport").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transport>("avtobazaModel.FK_Reysy_Transport", "Transport").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transport> TransportReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transport>("avtobazaModel.FK_Reysy_Transport", "Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transport>("avtobazaModel.FK_Reysy_Transport", "Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Sotrudniki")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sotrudniki : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Sotrudniki.
        /// </summary>
        /// <param name="iDSotrudnika">Исходное значение свойства IDSotrudnika.</param>
        /// <param name="iDUsera">Исходное значение свойства IDUsera.</param>
        /// <param name="familiya">Исходное значение свойства Familiya.</param>
        /// <param name="imya">Исходное значение свойства Imya.</param>
        /// <param name="iDDolzhosti">Исходное значение свойства IDDolzhosti.</param>
        /// <param name="nomerTel">Исходное значение свойства NomerTel.</param>
        public static Sotrudniki CreateSotrudniki(global::System.Int32 iDSotrudnika, global::System.Int32 iDUsera, global::System.String familiya, global::System.String imya, global::System.Int32 iDDolzhosti, global::System.Decimal nomerTel)
        {
            Sotrudniki sotrudniki = new Sotrudniki();
            sotrudniki.IDSotrudnika = iDSotrudnika;
            sotrudniki.IDUsera = iDUsera;
            sotrudniki.Familiya = familiya;
            sotrudniki.Imya = imya;
            sotrudniki.IDDolzhosti = iDDolzhosti;
            sotrudniki.NomerTel = nomerTel;
            return sotrudniki;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSotrudnika
        {
            get
            {
                return _IDSotrudnika;
            }
            set
            {
                if (_IDSotrudnika != value)
                {
                    OnIDSotrudnikaChanging(value);
                    ReportPropertyChanging("IDSotrudnika");
                    _IDSotrudnika = StructuralObject.SetValidValue(value, "IDSotrudnika");
                    ReportPropertyChanged("IDSotrudnika");
                    OnIDSotrudnikaChanged();
                }
            }
        }
        private global::System.Int32 _IDSotrudnika;
        partial void OnIDSotrudnikaChanging(global::System.Int32 value);
        partial void OnIDSotrudnikaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUsera
        {
            get
            {
                return _IDUsera;
            }
            set
            {
                OnIDUseraChanging(value);
                ReportPropertyChanging("IDUsera");
                _IDUsera = StructuralObject.SetValidValue(value, "IDUsera");
                ReportPropertyChanged("IDUsera");
                OnIDUseraChanged();
            }
        }
        private global::System.Int32 _IDUsera;
        partial void OnIDUseraChanging(global::System.Int32 value);
        partial void OnIDUseraChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Familiya
        {
            get
            {
                return _Familiya;
            }
            set
            {
                OnFamiliyaChanging(value);
                ReportPropertyChanging("Familiya");
                _Familiya = StructuralObject.SetValidValue(value, false, "Familiya");
                ReportPropertyChanged("Familiya");
                OnFamiliyaChanged();
            }
        }
        private global::System.String _Familiya;
        partial void OnFamiliyaChanging(global::System.String value);
        partial void OnFamiliyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Imya
        {
            get
            {
                return _Imya;
            }
            set
            {
                OnImyaChanging(value);
                ReportPropertyChanging("Imya");
                _Imya = StructuralObject.SetValidValue(value, false, "Imya");
                ReportPropertyChanged("Imya");
                OnImyaChanged();
            }
        }
        private global::System.String _Imya;
        partial void OnImyaChanging(global::System.String value);
        partial void OnImyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Otchestvo
        {
            get
            {
                return _Otchestvo;
            }
            set
            {
                OnOtchestvoChanging(value);
                ReportPropertyChanging("Otchestvo");
                _Otchestvo = StructuralObject.SetValidValue(value, true, "Otchestvo");
                ReportPropertyChanged("Otchestvo");
                OnOtchestvoChanged();
            }
        }
        private global::System.String _Otchestvo;
        partial void OnOtchestvoChanging(global::System.String value);
        partial void OnOtchestvoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDDolzhosti
        {
            get
            {
                return _IDDolzhosti;
            }
            set
            {
                OnIDDolzhostiChanging(value);
                ReportPropertyChanging("IDDolzhosti");
                _IDDolzhosti = StructuralObject.SetValidValue(value, "IDDolzhosti");
                ReportPropertyChanged("IDDolzhosti");
                OnIDDolzhostiChanged();
            }
        }
        private global::System.Int32 _IDDolzhosti;
        partial void OnIDDolzhostiChanging(global::System.Int32 value);
        partial void OnIDDolzhostiChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Passport
        {
            get
            {
                return _Passport;
            }
            set
            {
                OnPassportChanging(value);
                ReportPropertyChanging("Passport");
                _Passport = StructuralObject.SetValidValue(value, "Passport");
                ReportPropertyChanged("Passport");
                OnPassportChanged();
            }
        }
        private Nullable<global::System.Decimal> _Passport;
        partial void OnPassportChanging(Nullable<global::System.Decimal> value);
        partial void OnPassportChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NomerVoditelskihPrav
        {
            get
            {
                return _NomerVoditelskihPrav;
            }
            set
            {
                OnNomerVoditelskihPravChanging(value);
                ReportPropertyChanging("NomerVoditelskihPrav");
                _NomerVoditelskihPrav = StructuralObject.SetValidValue(value, true, "NomerVoditelskihPrav");
                ReportPropertyChanged("NomerVoditelskihPrav");
                OnNomerVoditelskihPravChanged();
            }
        }
        private global::System.String _NomerVoditelskihPrav;
        partial void OnNomerVoditelskihPravChanging(global::System.String value);
        partial void OnNomerVoditelskihPravChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NomerTel
        {
            get
            {
                return _NomerTel;
            }
            set
            {
                OnNomerTelChanging(value);
                ReportPropertyChanging("NomerTel");
                _NomerTel = StructuralObject.SetValidValue(value, "NomerTel");
                ReportPropertyChanged("NomerTel");
                OnNomerTelChanged();
            }
        }
        private global::System.Decimal _NomerTel;
        partial void OnNomerTelChanging(global::System.Decimal value);
        partial void OnNomerTelChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] Photo
        {
            get
            {
                return StructuralObject.GetValidValue(_Photo);
            }
            set
            {
                OnPhotoChanging(value);
                ReportPropertyChanging("Photo");
                _Photo = StructuralObject.SetValidValue(value, true, "Photo");
                ReportPropertyChanged("Photo");
                OnPhotoChanged();
            }
        }
        private global::System.Byte[] _Photo;
        partial void OnPhotoChanging(global::System.Byte[] value);
        partial void OnPhotoChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Sotrudniki_Dolzhnosti", "Dolzhnosti")]
        public Dolzhnosti Dolzhnosti
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dolzhnosti>("avtobazaModel.FK_Sotrudniki_Dolzhnosti", "Dolzhnosti").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dolzhnosti>("avtobazaModel.FK_Sotrudniki_Dolzhnosti", "Dolzhnosti").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Dolzhnosti> DolzhnostiReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dolzhnosti>("avtobazaModel.FK_Sotrudniki_Dolzhnosti", "Dolzhnosti");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dolzhnosti>("avtobazaModel.FK_Sotrudniki_Dolzhnosti", "Dolzhnosti", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Marshruty_Sotrudniki", "Marshruty")]
        public EntityCollection<Marshruty> Marshruty
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Marshruty>("avtobazaModel.FK_Marshruty_Sotrudniki", "Marshruty");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Marshruty>("avtobazaModel.FK_Marshruty_Sotrudniki", "Marshruty", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Sotrudniki_User", "Users")]
        public Users Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("avtobazaModel.FK_Sotrudniki_User", "Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("avtobazaModel.FK_Sotrudniki_User", "Users").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Users> UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Users>("avtobazaModel.FK_Sotrudniki_User", "Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Users>("avtobazaModel.FK_Sotrudniki_User", "Users", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Transport_Sotrudniki", "Transport")]
        public EntityCollection<Transport> Transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transport>("avtobazaModel.FK_Transport_Sotrudniki", "Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transport>("avtobazaModel.FK_Transport_Sotrudniki", "Transport", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта sysdiagrams.
        /// </summary>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="principal_id">Исходное значение свойства principal_id.</param>
        /// <param name="diagram_id">Исходное значение свойства diagram_id.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Transport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transport : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Transport.
        /// </summary>
        /// <param name="iDTransporta">Исходное значение свойства IDTransporta.</param>
        /// <param name="iDSotrudnika">Исходное значение свойства IDSotrudnika.</param>
        /// <param name="vmestimost">Исходное значение свойства Vmestimost.</param>
        public static Transport CreateTransport(global::System.Int32 iDTransporta, global::System.Int32 iDSotrudnika, global::System.Int32 vmestimost)
        {
            Transport transport = new Transport();
            transport.IDTransporta = iDTransporta;
            transport.IDSotrudnika = iDSotrudnika;
            transport.Vmestimost = vmestimost;
            return transport;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDTransporta
        {
            get
            {
                return _IDTransporta;
            }
            set
            {
                if (_IDTransporta != value)
                {
                    OnIDTransportaChanging(value);
                    ReportPropertyChanging("IDTransporta");
                    _IDTransporta = StructuralObject.SetValidValue(value, "IDTransporta");
                    ReportPropertyChanged("IDTransporta");
                    OnIDTransportaChanged();
                }
            }
        }
        private global::System.Int32 _IDTransporta;
        partial void OnIDTransportaChanging(global::System.Int32 value);
        partial void OnIDTransportaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDSotrudnika
        {
            get
            {
                return _IDSotrudnika;
            }
            set
            {
                OnIDSotrudnikaChanging(value);
                ReportPropertyChanging("IDSotrudnika");
                _IDSotrudnika = StructuralObject.SetValidValue(value, "IDSotrudnika");
                ReportPropertyChanged("IDSotrudnika");
                OnIDSotrudnikaChanged();
            }
        }
        private global::System.Int32 _IDSotrudnika;
        partial void OnIDSotrudnikaChanging(global::System.Int32 value);
        partial void OnIDSotrudnikaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Marka
        {
            get
            {
                return _Marka;
            }
            set
            {
                OnMarkaChanging(value);
                ReportPropertyChanging("Marka");
                _Marka = StructuralObject.SetValidValue(value, true, "Marka");
                ReportPropertyChanged("Marka");
                OnMarkaChanged();
            }
        }
        private global::System.String _Marka;
        partial void OnMarkaChanging(global::System.String value);
        partial void OnMarkaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Model
        {
            get
            {
                return _Model;
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, true, "Model");
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.String _Model;
        partial void OnModelChanging(global::System.String value);
        partial void OnModelChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GodVypusla
        {
            get
            {
                return _GodVypusla;
            }
            set
            {
                OnGodVypuslaChanging(value);
                ReportPropertyChanging("GodVypusla");
                _GodVypusla = StructuralObject.SetValidValue(value, true, "GodVypusla");
                ReportPropertyChanged("GodVypusla");
                OnGodVypuslaChanged();
            }
        }
        private global::System.String _GodVypusla;
        partial void OnGodVypuslaChanging(global::System.String value);
        partial void OnGodVypuslaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Vmestimost
        {
            get
            {
                return _Vmestimost;
            }
            set
            {
                OnVmestimostChanging(value);
                ReportPropertyChanging("Vmestimost");
                _Vmestimost = StructuralObject.SetValidValue(value, "Vmestimost");
                ReportPropertyChanged("Vmestimost");
                OnVmestimostChanged();
            }
        }
        private global::System.Int32 _Vmestimost;
        partial void OnVmestimostChanging(global::System.Int32 value);
        partial void OnVmestimostChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sostoyanie
        {
            get
            {
                return _Sostoyanie;
            }
            set
            {
                OnSostoyanieChanging(value);
                ReportPropertyChanging("Sostoyanie");
                _Sostoyanie = StructuralObject.SetValidValue(value, true, "Sostoyanie");
                ReportPropertyChanged("Sostoyanie");
                OnSostoyanieChanged();
            }
        }
        private global::System.String _Sostoyanie;
        partial void OnSostoyanieChanging(global::System.String value);
        partial void OnSostoyanieChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Reysy_Transport", "Reysy")]
        public EntityCollection<Reysy> Reysy
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reysy>("avtobazaModel.FK_Reysy_Transport", "Reysy");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reysy>("avtobazaModel.FK_Reysy_Transport", "Reysy", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Transport_Sotrudniki", "Sotrudniki")]
        public Sotrudniki Sotrudniki
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sotrudniki>("avtobazaModel.FK_Transport_Sotrudniki", "Sotrudniki").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sotrudniki>("avtobazaModel.FK_Transport_Sotrudniki", "Sotrudniki").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Sotrudniki> SotrudnikiReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Sotrudniki>("avtobazaModel.FK_Transport_Sotrudniki", "Sotrudniki");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Sotrudniki>("avtobazaModel.FK_Transport_Sotrudniki", "Sotrudniki", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Transport_Voditeli", "Voditeli")]
        public Voditeli Voditeli
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Voditeli>("avtobazaModel.FK_Transport_Voditeli", "Voditeli").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Voditeli>("avtobazaModel.FK_Transport_Voditeli", "Voditeli").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Voditeli> VoditeliReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Voditeli>("avtobazaModel.FK_Transport_Voditeli", "Voditeli");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Voditeli>("avtobazaModel.FK_Transport_Voditeli", "Voditeli", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Users : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Users.
        /// </summary>
        /// <param name="iDUsera">Исходное значение свойства IDUsera.</param>
        /// <param name="login">Исходное значение свойства Login.</param>
        /// <param name="parol">Исходное значение свойства Parol.</param>
        public static Users CreateUsers(global::System.Int32 iDUsera, global::System.String login, global::System.String parol)
        {
            Users users = new Users();
            users.IDUsera = iDUsera;
            users.Login = login;
            users.Parol = parol;
            return users;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDUsera
        {
            get
            {
                return _IDUsera;
            }
            set
            {
                if (_IDUsera != value)
                {
                    OnIDUseraChanging(value);
                    ReportPropertyChanging("IDUsera");
                    _IDUsera = StructuralObject.SetValidValue(value, "IDUsera");
                    ReportPropertyChanged("IDUsera");
                    OnIDUseraChanged();
                }
            }
        }
        private global::System.Int32 _IDUsera;
        partial void OnIDUseraChanging(global::System.Int32 value);
        partial void OnIDUseraChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Login
        {
            get
            {
                return _Login;
            }
            set
            {
                OnLoginChanging(value);
                ReportPropertyChanging("Login");
                _Login = StructuralObject.SetValidValue(value, false, "Login");
                ReportPropertyChanged("Login");
                OnLoginChanged();
            }
        }
        private global::System.String _Login;
        partial void OnLoginChanging(global::System.String value);
        partial void OnLoginChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Parol
        {
            get
            {
                return _Parol;
            }
            set
            {
                OnParolChanging(value);
                ReportPropertyChanging("Parol");
                _Parol = StructuralObject.SetValidValue(value, false, "Parol");
                ReportPropertyChanged("Parol");
                OnParolChanged();
            }
        }
        private global::System.String _Parol;
        partial void OnParolChanging(global::System.String value);
        partial void OnParolChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Sotrudniki_User", "Sotrudniki")]
        public EntityCollection<Sotrudniki> Sotrudniki
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sotrudniki>("avtobazaModel.FK_Sotrudniki_User", "Sotrudniki");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sotrudniki>("avtobazaModel.FK_Sotrudniki_User", "Sotrudniki", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="avtobazaModel", Name="Voditeli")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Voditeli : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Voditeli.
        /// </summary>
        /// <param name="iDVoditelya">Исходное значение свойства IDVoditelya.</param>
        public static Voditeli CreateVoditeli(global::System.Int32 iDVoditelya)
        {
            Voditeli voditeli = new Voditeli();
            voditeli.IDVoditelya = iDVoditelya;
            return voditeli;
        }

        #endregion

        #region Простые свойства
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IDVoditelya
        {
            get
            {
                return _IDVoditelya;
            }
            set
            {
                if (_IDVoditelya != value)
                {
                    OnIDVoditelyaChanging(value);
                    ReportPropertyChanging("IDVoditelya");
                    _IDVoditelya = StructuralObject.SetValidValue(value, "IDVoditelya");
                    ReportPropertyChanged("IDVoditelya");
                    OnIDVoditelyaChanged();
                }
            }
        }
        private global::System.Int32 _IDVoditelya;
        partial void OnIDVoditelyaChanging(global::System.Int32 value);
        partial void OnIDVoditelyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Imya
        {
            get
            {
                return _Imya;
            }
            set
            {
                OnImyaChanging(value);
                ReportPropertyChanging("Imya");
                _Imya = StructuralObject.SetValidValue(value, true, "Imya");
                ReportPropertyChanged("Imya");
                OnImyaChanged();
            }
        }
        private global::System.String _Imya;
        partial void OnImyaChanging(global::System.String value);
        partial void OnImyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Familiya
        {
            get
            {
                return _Familiya;
            }
            set
            {
                OnFamiliyaChanging(value);
                ReportPropertyChanging("Familiya");
                _Familiya = StructuralObject.SetValidValue(value, true, "Familiya");
                ReportPropertyChanged("Familiya");
                OnFamiliyaChanged();
            }
        }
        private global::System.String _Familiya;
        partial void OnFamiliyaChanging(global::System.String value);
        partial void OnFamiliyaChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Otchestvo
        {
            get
            {
                return _Otchestvo;
            }
            set
            {
                OnOtchestvoChanging(value);
                ReportPropertyChanging("Otchestvo");
                _Otchestvo = StructuralObject.SetValidValue(value, true, "Otchestvo");
                ReportPropertyChanged("Otchestvo");
                OnOtchestvoChanged();
            }
        }
        private global::System.String _Otchestvo;
        partial void OnOtchestvoChanging(global::System.String value);
        partial void OnOtchestvoChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NomerVoditelskihPrav
        {
            get
            {
                return _NomerVoditelskihPrav;
            }
            set
            {
                OnNomerVoditelskihPravChanging(value);
                ReportPropertyChanging("NomerVoditelskihPrav");
                _NomerVoditelskihPrav = StructuralObject.SetValidValue(value, true, "NomerVoditelskihPrav");
                ReportPropertyChanged("NomerVoditelskihPrav");
                OnNomerVoditelskihPravChanged();
            }
        }
        private global::System.String _NomerVoditelskihPrav;
        partial void OnNomerVoditelskihPravChanging(global::System.String value);
        partial void OnNomerVoditelskihPravChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String NomerTel
        {
            get
            {
                return _NomerTel;
            }
            set
            {
                OnNomerTelChanging(value);
                ReportPropertyChanging("NomerTel");
                _NomerTel = StructuralObject.SetValidValue(value, true, "NomerTel");
                ReportPropertyChanged("NomerTel");
                OnNomerTelChanged();
            }
        }
        private global::System.String _NomerTel;
        partial void OnNomerTelChanging(global::System.String value);
        partial void OnNomerTelChanged();

        #endregion

        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("avtobazaModel", "FK_Transport_Voditeli", "Transport")]
        public EntityCollection<Transport> Transport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transport>("avtobazaModel.FK_Transport_Voditeli", "Transport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transport>("avtobazaModel.FK_Transport_Voditeli", "Transport", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
